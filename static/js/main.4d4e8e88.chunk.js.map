{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","countOfPages","Math","ceil","pages","i","push","className","cn","disabled","href","onClick","map","num","active","length","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","totalItems","fromItems","toItems","min","id","onChange","e","target","value","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAuBC,KAAKC,KAAKN,EAAQC,GACzCM,EAAkB,GAEfC,EAAI,EAAGA,GAAKJ,EAAcI,GAAK,EACtCD,EAAME,KAAKD,GAWb,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBV,IAA3C,SACmB,IAAhBA,EACC,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAAc,OAJhB,kBASA,mBACE,UAAQ,WACRH,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAtBgB,WACxBX,EAAaD,EAAc,IAgBrB,oBAYHK,EAAMQ,KAAI,SAAAC,GACT,OACE,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQf,IAAgBc,IADvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAcX,oBAAIN,UAAWC,IAAG,YAChB,CAAEC,SAAUV,IAAgBK,EAAMW,SADpC,SAGGhB,IAAgBE,EACf,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAc,OAJhB,kBASA,mBACE,UAAQ,WACRH,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QArEgB,WACxBX,EAAaD,EAAc,IA+DrB,wBChFV,IAAMiB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQb,KAAKc,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB0B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoB0B,EAApB,KACMC,EAAaV,EAAMD,OAGnBY,EAAY7B,EAAUC,EAAcD,EAAU,EAC9C8B,EAAU1B,KAAK2B,IAAI/B,EAAUC,EAAa2B,GAOhD,OACE,sBAAKnB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC4B,EADjC,cACgDC,EADhD,eAC8DF,EAD9D,OAIA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,SAnBa,SAACC,GACtBR,GAAaQ,EAAEC,OAAOC,OACtBT,EAAe,IAkBPS,MAAOpC,EALT,SApBkB,CAAC,EAAG,EAAG,GAAI,IA2BlBc,KAAI,SAAAC,GAAG,OAAI,wBAAQqB,MAAOrB,EAAf,SAAqBA,WAI7C,uBAAOsB,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAO6B,EACP5B,QAASA,EACTC,YAAaA,EACbC,aAAcyB,IAGhB,6BACGT,EAAMoB,MAAMT,EAAY,EAAGC,GAAShB,KAAI,SAAAyB,GAAI,OAC3C,oBAAI,UAAQ,OAAZ,SAAoBA,aEvD9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4d4e8e88.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void\n}\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const countOfPages: number = Math.ceil(total / perPage);\n  const pages: number[] = [];\n\n  for (let i = 1; i <= countOfPages; i += 1) {\n    pages.push(i);\n  }\n\n  const handleOnClickNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const handleOnClickPrev = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        {currentPage === 1 ? (\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n          >\n            «\n          </a>\n        ) : (\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"false\"\n            onClick={handleOnClickPrev}\n          >\n            «\n          </a>\n        )}\n      </li>\n\n      {pages.map(num => {\n        return (\n          <li\n            className={cn('page-item', { active: currentPage === num })}\n            key={num}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${num}`}\n              onClick={() => onPageChange(num)}\n            >\n              {num}\n            </a>\n          </li>\n        );\n      })}\n\n      <li className={cn('page-item',\n        { disabled: currentPage === pages.length })}\n      >\n        {currentPage === countOfPages ? (\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"true\"\n          >\n            »\n          </a>\n        ) : (\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={handleOnClickNext}\n          >\n            »\n          </a>\n        )}\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalItems = items.length;\n  const options: number[] = [3, 5, 10, 20];\n\n  const fromItems = perPage * currentPage - perPage + 1;\n  const toItems = Math.min(perPage * currentPage, totalItems);\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+(e.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${fromItems} - ${toItems} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleOnChange}\n            value={perPage}\n          >\n            {options.map(num => <option value={num}>{num}</option>)}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {items.slice(fromItems - 1, toItems).map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}